var shoppingCartAPI = {
    cartApiOptions: {
        apiHost: "/store",
        urlAuthentication: "https://login.archipassport.com/scripts/authentication/VerifyUserAuthentication.ashx?",
        userToken: "",
        culture: "it",
        countryCode: "IT",
        portalType: 4,
        currency: "EUR",
        sellerId: null,
        cartToken: ""
    },
    init: function(n) {
        $.extend(this.cartApiOptions, n);
        typeof cartToken != "undefined" && (this.cartApiOptions.cartToken = cartToken)
    },
    getTokens: function() {
        var n = {},
            i = shoppingCartAPI.getJquery(),
            t;
        return this.cartApiOptions.countryCode && (n.countryCode = this.cartApiOptions.countryCode), this.cartApiOptions.culture && (n.culture = this.cartApiOptions.culture), this.cartApiOptions.portalType && (n.portalType = this.cartApiOptions.portalType), this.cartApiOptions.currency && (n.currency = this.cartApiOptions.currency), t = this.cartApiOptions.userToken ? this.cartApiOptions.userToken : i.cookie(".ArchipassportToken"), typeof t != "undefined" ? n.userToken = t : typeof $.cookie("TempCartToken") != "undefined" && (n.tempCartToken = i.cookie("TempCartToken")), this.cartApiOptions.cartToken.length > 0 && (n.cartToken = this.cartApiOptions.cartToken, typeof n.tempCartToken != "undefined" && n.tempCartToken !== n.cartToken && (n.tempCartToken = n.cartToken)), typeof this.cartApiOptions.showRewards != "undefined" && (n.showRewards = this.cartApiOptions.showRewards), n
    },
    getUserToken: function() {
        return this.cartApiOptions.userToken ? this.cartApiOptions.userToken : $jq.cookie(".ArchipassportToken")
    },
    getApiUrl: function(n, t) {
        return n ? n !== "" ? this.cartApiOptions.apiHost + "/" + n + t : this.cartApiOptions.apiHost + t : n === undefined ? this.cartApiOptions.apiHost + "/it" + t : n !== "" ? this.cartApiOptions.apiHost + "/" + n + t : this.cartApiOptions.apiHost + t
    },
    verifyAuthentication: function(n, t) {
        var r = this.cartApiOptions.urlAuthentication,
            i;
        r += "&callback=?";
        i = this;
        i.cartApiOptions.portalType === 4 ? i.isAuthenticated() ? n() : t() : jQuery.getJSON(r, function(i) {
            i === "" ? typeof t == "function" && t() : (jQuery.cookie(".ArchipassportToken") === null && jQuery.cookie(".ArchipassportToken", i), jQuery.cookie(".IsAuthenticated") === null && jQuery.cookie(".IsAuthenticated", "true"), typeof n == "function" && n())
        })
    },
    isAuthenticated: function() {
        return jQuery.cookie(".ArchipassportToken") ? !0 : !1
    },
    getCart: function(n, t) {
        var r = this.getApiUrl("", "/shoppingcart/cart?type=" + n),
            u = this,
            i;
        r.includes("edilportale.com") && (u.cartApiOptions.portalType = 1);
        i = shoppingCartAPI.getJquery();
        i.ajax({
            url: r,
            async: !1,
            cache: !1,
            data: i.param(u.getTokens()),
            success: function(i) {
                if (typeof t == "function" && t(i), n === "full" && typeof analyticsModel == "object") {
                    var r = shoppingCartAPI.objToArray(analyticsModel);
                    document.dispatchEvent(new CustomEvent("wr-checkout-1", {
                        bubbles: !0,
                        detail: r
                    }))
                }
            }
        })
    },
    getOffCanvasMiniCartData: function(n) {
        var t = shoppingCartAPI.getApiUrl("", "/shoppingcart/minicart"),
            i = shoppingCartAPI.getJquery();
        i.ajax({
            url: t,
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify(shoppingCartAPI.getTokens()),
            dataType: "json",
            success: function(t) {
                typeof n == "function" && n(t)
            }
        })
    },
    getCompactCart: function(n) {
        var t = shoppingCartAPI.getApiUrl("", "/shoppingcart/cartmenu"),
            r = this,
            i = shoppingCartAPI.getJquery();
        i.ajax({
            url: t,
            data: $.param(shoppingCartAPI.getTokens()),
            success: function(t) {
                typeof n == "function" && n(t)
            }
        })
    },
    getArticlePrice: function(n, t) {
        var r = this.getApiUrl("", "/api/shoppingcart/articleprice"),
            u = this,
            i;
        typeof n.countryCode == "undefined" && (n.countryCode = this.cartApiOptions.countryCode);
        i = shoppingCartAPI.getJquery();
        i.ajax({
            url: r,
            jsonp: "callback",
            dataType: "jsonp",
            data: i.param(n),
            success: function(n) {
                typeof t == "function" && t(n)
            }
        })
    },
    getArticleInfo: function(n, t, i) {
        var u = this.getApiUrl("", "/shoppingcart/getarticleinfo?culture=" + t),
            f = this,
            r;
        n.culture = t;
        n.portalType = this.cartApiOptions.portalType;
        typeof n.countryCode == "undefined" && (n.countryCode = this.cartApiOptions.countryCode);
        n.userToken = this.cartApiOptions.userToken;
        r = shoppingCartAPI.getJquery();
        r.ajax({
            url: u,
            jsonp: "callback",
            method: "post",
            contentType: "application/json",
            data: JSON.stringify(n),
            success: function(n) {
                if (typeof i == "function") {
                    i(n);
                    try {
                        initTooltip()
                    } catch (t) {}
                }
            }
        })
    },
    joinCartToUser: function(n, t, i) {
        var u = shoppingCartAPI.getJquery(),
            r = {},
            f, e;
        r.userToken = n;
        r.cartToken = t;
        f = this.getApiUrl("", "/shoppingcart/joincarttouser?" + u.param(r));
        e = this;
        u.ajax({
            url: f,
            method: "GET",
            cache: !1,
            async: !1
        }).done(function(n) {
            typeof i == "function" && i(n)
        })
    },
    applyCoupon: function(n, t, i) {
        var f = this,
            e = shoppingCartAPI.getJquery(),
            r = this.getTokens(),
            u;
        r.culture = t === "" ? f.cartApiOptions.culture : t;
        r.couponCode = n;
        u = this.getApiUrl("", "/discount/applycode") + "?culture=" + r.culture;
        e.ajax({
            url: u,
            jsonp: "callback",
            method: "post",
            contentType: "application/json",
            data: JSON.stringify(r),
            success: function(n) {
                typeof i == "function" && i(n)
            }
        })
    },
    removeCoupon: function(n, t) {
        var r = this.getApiUrl("", "/discount/removecoupon"),
            u = this,
            f = shoppingCartAPI.getJquery(),
            i = this.getTokens();
        i.culture = n === "" ? u.cartApiOptions.culture : n;
        f.ajax({
            url: r,
            jsonp: "callback",
            method: "post",
            contentType: "application/json",
            data: JSON.stringify(i),
            success: function(n) {
                typeof t == "function" && t(n)
            }
        })
    },
    doubleClickCheck: 0,
    addToCart: function(n, t, i) {
        var r = shoppingCartAPI.getJquery(),
            f, e, u;
        this.doubleClickCheck === 0 && (this.doubleClickCheck === 1, f = r("._articles-number").length !== 0 ? r("._articles-number").text() : r(shoppingCartSettings.totalArticlesQuantitySelector).length != 0 ? r(shoppingCartSettings.totalArticlesQuantitySelector).attr("number") : null, (f === "0" || f === "") && r.cookie("TempCartToken", null, {
            path: "/",
            domain: document.location.hostname
        }), e = this.getApiUrl("", "/shoppingcart/postarticle"), n.culture = this.cartApiOptions.culture, u = this.getTokens(), u.article = n, r.ajax({
            url: e,
            method: "post",
            Accept: "application/json",
            contentType: "application/json",
            data: JSON.stringify(u)
        }).done(function(n) {
            var f = n.isQuote,
                e;
            this.doubleClickCheck = 0;
            f || n.analytics !== null && (e = {
                id: n.analytics.productId,
                brand: n.analytics.brand,
                price: n.analytics.price,
                quantity: u.article.quantity,
                variant: n.analytics.variant,
                availability: n.analytics.availability,
                productSection: n.analytics.productSection,
                currencyCode: n.analytics.currencyCode
            }, document.dispatchEvent(new CustomEvent("wr-addToCart", {
                bubbles: !0,
                detail: e
            })));
            n.messageType !== "Error" ? (r.cookie && n.tempCartToken !== "" && r.cookie("TempCartToken", n.tempCartToken, {
                expires: 30,
                path: "/",
                domain: document.location.hostname
            }), f || typeof shoppingCartMenu != "undefined" && shoppingCartMenu && (shoppingCartMenu.insertToCartAnimation(), shoppingCartMenu.refreshAndShow()), typeof t == "function" && t(n), f || typeof shoppingCartMenu != "undefined" && shoppingCartMenu && shoppingCartMenu.highlightNumber()) : (this.doubleClickCheck = 0, n.errorMessageType === "InvalidTempCartToken" && r.cookie("TempCartToken", null, {
                path: "/",
                domain: document.location.hostname
            }), typeof i == "function" && i(n))
        }))
    },
    updateQuantity: function(n, t, i) {
        var f = shoppingCartAPI.getJquery(),
            r = this.getTokens(),
            u;
        r.culture = this.cartApiOptions.culture;
        u = this.getApiUrl("", "/shoppingcart/updatequantity");
        r.article = n;
        f.ajax({
            url: u,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            processData: !1,
            data: JSON.stringify(r),
            cache: !1
        }).done(function(n) {
            typeof t == "function" && t(n);
            typeof shoppingCartMenu != "undefined" && shoppingCartMenu && shoppingCartMenu.highlightNumber()
        }).fail(function(n) {
            typeof i == "function" && i(n)
        })
    },
    updateFeeAmb: function(n, t, i) {
        var f = shoppingCartAPI.getJquery(),
            r = this.getTokens(),
            u;
        r.culture = this.cartApiOptions.culture;
        u = this.getApiUrl("", "/shoppingcart/updatefeeamb");
        r.article = n;
        f.ajax({
            url: u,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            processData: !1,
            data: JSON.stringify(r),
            cache: !1
        }).done(function(n) {
            typeof t == "function" && t(n)
        }).fail(function(n) {
            typeof i == "function" && i(n)
        })
    },
    deleteCartArticle: function(n, t, i, r = false) {
        var e = shoppingCartAPI.getJquery(),
            u = this.getTokens(),
            f;
        u.culture = this.cartApiOptions.culture;
        f = this.getApiUrl("", "/shoppingcart/DeleteArticle");
        u.article = n;
        u.isMinicart = r;
        e.ajax({
            url: f,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(u),
            cache: !1
        }).done(function(n) {
            var i, r;
            typeof analyticsModel == "object" && (i = analyticsModel[n.cartItemId], i !== undefined && (r = {
                id: i.productId,
                brand: i.brand,
                price: i.price,
                quantity: i.quantity,
                variant: i.variant,
                availability: i.availability,
                productSection: i.productSection,
                currencyCode: i.currencyCode
            }, document.dispatchEvent(new CustomEvent("wr-removeToCart", {
                bubbles: !0,
                detail: r
            }))));
            typeof t == "function" && t(n);
            typeof shoppingCartMenu != "undefined" && shoppingCartMenu && shoppingCartMenu.highlightNumber()
        }).fail(function(n) {
            typeof t == "function" && i(n)
        })
    },
    reorderArticle: function(n, t, i) {
        var r = shoppingCartAPI.getJquery(),
            u, e, f;
        this.doubleClickCheck === 0 && (this.doubleClickCheck == 1, u = r("._articles-number").length !== 0 ? r("._articles-number").text() : r(shoppingCartSettings.totalArticlesQuantitySelector).length != 0 ? r(shoppingCartSettings.totalArticlesQuantitySelector).attr("number") : null, (u == "0" || u == "") && r.cookie("TempCartToken", null, {
            path: "/",
            domain: document.location.hostname
        }), e = this.getApiUrl("", "/shoppingCart/ReorderArticle"), n.culture = this.cartApiOptions.culture, f = this.getTokens(), f.article = n, r.ajax({
            url: e,
            method: "post",
            accept: "application/json",
            contentType: "application/json",
            data: JSON.stringify(f),
            cache: !1
        }).done(function(n) {
            this.doubleClickCheck = 0;
            n.messageType != "Error" ? (r.cookie && n.tempCartToken != "" && r.cookie("TempCartToken", n.tempCartToken, {
                expires: 30,
                path: "/",
                domain: document.location.hostname
            }), typeof shoppingCartMenu != "undefined" && shoppingCartMenu && (shoppingCartMenu.insertToCartAnimation(), shoppingCartMenu.refreshAndShow()), typeof t == "function" && t(n), typeof shoppingCartMenu != "undefined" && shoppingCartMenu && shoppingCartMenu.highlightNumber()) : (this.doubleClickCheck = 0, n.errorMessageType == "InvalidTempCartToken" && r.cookie("TempCartToken", null, {
                path: "/",
                domain: document.location.hostname
            }), typeof i == "function" && i(n))
        }))
    },
    reorderArticleModal: function(n, t) {
        var i = shoppingCartAPI.getJquery(),
            r, f, u;
        this.doubleClickCheck === 0 && (this.doubleClickCheck == 1, r = i("._articles-number").length !== 0 ? i("._articles-number").text() : i(shoppingCartSettings.totalArticlesQuantitySelector).length != 0 ? i(shoppingCartSettings.totalArticlesQuantitySelector).attr("number") : null, (r == "0" || r == "") && i.cookie("TempCartToken", null, {
            path: "/",
            domain: document.location.hostname
        }), f = this.getApiUrl("", "/shoppingcart/reorderarticlemodal"), n.culture = this.cartApiOptions.culture, u = this.getTokens(), u.article = n, i.ajax({
            url: f,
            method: "post",
            accept: "application/json",
            contentType: "application/json",
            data: JSON.stringify(u),
            cache: !1
        }).done(function(n) {
            typeof t == "function" && t(n)
        }))
    },
    getCartArticlesQuantity: function(n, t) {
        var r = this,
            u = this.getApiUrl("", "/shoppingcart/articlesquantity"),
            i = shoppingCartAPI.getJquery();
        i.ajax({
            url: u,
            method: "GET",
            xhrFields: {
                withCredentials: !0
            },
            data: i.param(r.getTokens()),
            cache: !1
        }).done(function(t) {
            typeof n == "function" && n(t);
            typeof shoppingCartMenu != "undefined" && shoppingCartMenu && shoppingCartMenu.highlightNumber()
        }).fail(function(i) {
            typeof n == "function" && t && t(i)
        })
    },
    goToCheckout: function(n) {
        var t = this;
        typeof authenticationAPI != "undefined" ? t.cartApiOptions.portalType === 4 ? t.isAuthenticated() ? t.goToPurchaseWizard(n) : t.showLoginDialogIfNotAuthenticated() : authenticationAPI.verifyAuthentication(function() {
            t.goToPurchaseWizard(n)
        }, function() {
            t.showLoginDialogIfNotAuthenticated()
        }) : Alert("authenticationAPI not exist!")
    },
    changeCart: function() {
        var n = this.getApiUrl("", "/shoppingcart/changecart"),
            t = shoppingCartAPI.getJquery();
        t.ajax({
            url: n,
            method: "POST",
            cache: !1
        }).done(function() {
            shoppingCart.show("#ShoppingCart")
        }).fail(function() {
            alert("error")
        })
    },
    newCart: function() {
        var n = prompt("Inserire titolo carrello"),
            t, i;
        n != null && (t = this.getApiUrl("", "/api/shoppingcart/changecart?cartTitle=" + n + "&userToken=" + this.getTokens().userToken), i = shoppingCartAPI.getJquery(), i.ajax({
            url: t,
            method: "POST",
            cache: !1
        }).done(function() {
            shoppingCart.show("#ShoppingCart")
        }).fail(function() {
            alert("error")
        }))
    },
    showLoginDialogIfNotAuthenticated: function() {
        var n = this,
            t = n.getTokens(),
            i;
        t.userToken === null || t.userToken === undefined ? (i = n.getPurchaseWizardUrl(), typeof loginDialog != "undefined" ? loginDialog.show() : ShowLoginDialog()) : n.goToPurchaseWizard()
    },
    goToPurchaseWizard: function(n) {
        document.location = this.getPurchaseWizardUrl(n)
    },
    getPurchaseWizardUrl: function(n) {
        var i = shoppingCartAPI.getJquery(),
            r = this.getApiUrl("", "/purchase/wizard"),
            t = this.getTokens();
        return typeof n != "undefined" && (t.currency = n), r + "?" + i.param(t)
    },
    calculateShippingPrices: function(n) {
        var t = shoppingCartAPI.getJquery(),
            i = this.getApiUrl("", "/api/shoppingcart/calculateshippingprices?" + t.param(this.getTokens())),
            r = this;
        t.ajax({
            url: i,
            method: "GET",
            cache: !1,
            success: function(t) {
                typeof n == "function" && n(t)
            }
        })
    },
    getTntPricing: function(n, t, i, r) {
        var u = this.getApiUrl("", "/api/shoppingcart/pricingandtimings?nationId=" + t),
            f = shoppingCartAPI.getJquery();
        f.ajax({
            url: u,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            processData: !1,
            data: JSON.stringify(n),
            cache: !1
        }).done(function(n) {
            typeof i == "function" && i(n)
        }).fail(function(n) {
            typeof r == "function" && r(n)
        })
    },
    checkCart: function(n, t, i) {
        var u = this.getApiUrl("", "/shoppingcart/checkcart"),
            f = this,
            e = shoppingCartAPI.getJquery(),
            r = f.getTokens();
        r.countryCode = n;
        r.culture = t;
        e.ajax({
            url: u,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(r),
            success: function(n) {
                typeof i == "function" && i(n)
            }
        })
    },
    changeShippingMethod: function(n, t, i) {
        var u = this.getApiUrl("", "/shoppingcart/changeshippingmethod"),
            f = this,
            e = shoppingCartAPI.getJquery(),
            r = f.getTokens();
        r.culture = this.cartApiOptions.culture;
        r.shippingMethodId = t;
        r.article = {
            ShoppingCartItemId: n
        };
        e.ajax({
            url: u,
            method: "POST",
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify(r),
            success: function(n) {
                typeof i == "function" && i(n)
            }
        })
    },
    objToArray: function(n) {
        return Object.keys(n).map(t => n[t])
    },
    getJquery: function() {
        return typeof $j != "undefined" ? $j : $
    }
};