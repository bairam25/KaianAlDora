var shoppingCartMenu = {
        minicartHasOpened: !1,
        cartMenuOptions: {
            cartButtonSelector: "[JquerySelector]",
            totalArticlesQuantitySelector: "[JquerySelector]",
            shoppingCartPageUrl: "/it/test"
        },
        init: function(n) {
            this.cartMenuOptions = n;
            this.sendTranslationsToMiniCart();
            this.bindEventToButton();
            this.refreshCartArticlesQuantity()
        },
        translations: function() {
            return shoppingCartMenuTranslations ? shoppingCartMenuTranslations : {
                removeArticleConfirmMessage: "Rimuovere l'articolo [ArticleName] dal carrello?",
                shoppingCartEmptyMessage: "Nessun Articolo nel carrello!"
            }
        },
        setTranslations: function(n) {
            this.translations = n
        },
        sendEventToMiniCart: function(n) {
            document.dispatchEvent(new CustomEvent("toggle-mini-cart", {
                bubbles: !0,
                detail: n
            }))
        },
        sendTranslationsToMiniCart: function() {
            var n = Object.assign({}, this.cartMenuOptions);
            this.sendEventToMiniCart({
                type: "SET_TRANSLATIONS_AND_URLS",
                payload: n
            })
        },
        bindEventToButton: function() {
            var n = shoppingCartMenu.getJquery();
            n(this.cartMenuOptions.cartButtonSelector).click(t => {
                var i, r, u;
                n("#loggedSection").addClass("dn");
                i = !1;
                shoppingCart && (i = shoppingCart.changed, shoppingCart.changed = !1);
                r = i || !this.minicartHasOpened ? shoppingCartAPI.getOffCanvasMiniCartData : null;
                this.minicartHasOpened = !0;
                u = {
                    type: "OPEN",
                    payload: {
                        callback: r
                    }
                };
                this.sendEventToMiniCart(u);
                t.stopPropagation()
            })
        },
        insertToCartAnimation: function() {
            var n = shoppingCartMenu.getJquery(),
                r = $("#GalleryHighlightImage"),
                u = r,
                t = null,
                f, e;
            if (r.length > 0 ? t = r : u.length > 0 && (t = u), t != null && t.length != 0) {
                n(".cart-mini .basket").removeClass("shake-animation");
                var i = shoppingCartUtils.getScreenCordinates(n(this.cartMenuOptions.cartButtonSelector).get(0)),
                    o = n(document).scrollTop(),
                    s = i.x;
                i = shoppingCartUtils.getScreenCordinates(t.get(0));
                f = i.y;
                e = i.x;
                t.clone().appendTo("BODY").addClass("_animation-box");
                n("._animation-box").css({
                    top: f,
                    left: e,
                    position: "absolute",
                    "z-index": "10000"
                }).animate({
                    left: s,
                    top: o,
                    width: 30,
                    height: 30
                }, 500, function() {
                    n("._animation-box").remove();
                    n(".cart-mini .basket").addClass("shake-animation")
                })
            }
        },
        getArticleNumber: function() {
            var n = shoppingCartMenu.getJquery();
            return n("._articles-number").text()
        },
        highlightNumber: function() {
            var n = shoppingCartMenu.getJquery(),
                t;
            n("._articles-number").length != 0 && (t = n("._articles-number").text(), t != "0")
        },
        remove: function(n) {
            var t = {
                ShoppingCartItemId: n
            };
            shoppingCartAPI.deleteCartArticle(t, this.deleteCompactCartArticleSuccess, this.deleteCompactCartArticleFail)
        },
        refreshCartArticlesQuantity: function() {
            var n = this,
                t = shoppingCartMenu.getJquery();
            shoppingCartAPI.getCartArticlesQuantity(function(i) {
                i == "0" ? (t(n.cartMenuOptions.totalArticlesQuantitySelector).html(""), t(n.cartMenuOptions.totalArticlesQuantitySelector).hide()) : (t(n.cartMenuOptions.totalArticlesQuantitySelector).html(i), t(n.cartMenuOptions.totalArticlesQuantitySelector).show())
            }, null)
        },
        refreshAndShow: function() {
            this.minicartHasOpened = !0;
            var n = {
                type: "OPEN",
                payload: {
                    callback: shoppingCartAPI.getOffCanvasMiniCartData,
                    addedItemToCart: !0
                }
            };
            this.sendEventToMiniCart(n)
        },
        refresh: function(n, t) {
            var i = this;
            shoppingCartAPI.getOffCanvasMiniCartData(function(t) {
                i.refreshCartArticlesQuantity();
                typeof n == "function" && n(t)
            }, function(n) {
                typeof t == "function" && t(n)
            })
        },
        show: function() {
            var n = shoppingCartMenu.getJquery();
            n("._shopping-cart-menu-container").show()
        },
        hide: function() {
            var n = shoppingCartMenu.getJquery();
            n("._shopping-cart-menu-container").hide()
        },
        deleteCompactCartArticleSuccess: function(n) {
            var t = shoppingCartMenu.getJquery(),
                i, r, u;
            n.deleted == !0 && (i = n.cartItemId, r = t("._compactcart-article-container[cart-item-id=" + i + "]"), shoppingCartMenu.refreshCartArticlesQuantity(), r.hide(), t("._compactcart-container ._cart-subtotal").html(n.cartSubtotal), u = t("._cart-article-container[cart-item-id=" + i + "]"), u.length != 0 && shoppingCart.refresh())
        },
        deleteCompactCartArticleFail: function(n) {
            alert(n)
        },
        getJquery: function() {
            return typeof $j != "undefined" ? $j : $
        }
    },
    shoppingCartUtils = {
        getScreenCordinates: function(n) {
            var t = {};
            for (t.x = n.offsetLeft, t.y = n.offsetTop; n.offsetParent;)
                if (t.x = t.x + n.offsetParent.offsetLeft, t.y = t.y + n.offsetParent.offsetTop, n == document.getElementsByTagName("body")[0]) break;
                else n = n.offsetParent;
            return t
        }
    };